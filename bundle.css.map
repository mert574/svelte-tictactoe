{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n    let board = new Array(9).fill(\"\");\n    let highlightedCells = new Array(3);\n    let playerTurn = true;\n    let lastWinner = null;\n\n    const winningPositions = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n\n    function handleCellClick(cell) {\n        if (board[cell] !== \"\" || lastWinner !== null) {\n            return;\n        }\n\n        board[cell] = playerTurn ? \"X\" : \"O\";\n        checkForWinners();\n\n        playerTurn = !playerTurn;\n    }\n\n    function checkForWinners() {\n        winningPositions.forEach(([i, j, k]) => {\n            if (allEqualAndNotEmpty(board[i], board[j], board[k])) {\n                const winnerSymbol = board[i];\n                highlightedCells = [i, j, k];\n                finalizeGame(winnerSymbol);\n            }\n        });\n\n        const isRoundDraw = board.every(cell => cell !== \"\") && lastWinner === null;\n        if (isRoundDraw) {\n            finalizeGame();\n        }\n    }\n\n    function allEqualAndNotEmpty(...values) {\n        const first = values[0];\n        return values.reduce((acc, curr) => curr !== \"\" && acc && first === curr);\n    }\n\n    async function finalizeGame(winnerSymbol) {\n        if (winnerSymbol === \"X\") {\n            lastWinner = \"PLAYER\";\n        } else if (winnerSymbol === \"O\") {\n            lastWinner = \"OPPONENT\";\n        } else {\n            lastWinner = \"DRAW\";\n        }\n\n        setTimeout(() => {\n            lastWinner = null;\n            board = new Array(9).fill(\"\");\n            highlightedCells = new Array(3);\n        }, 2000);\n\n    }\n</script>\n\n<main>\n    <h1>Tic Tac Toe</h1>\n    <div class=\"board\">\n        {#each board as cell, i}\n            <div class=\"cell\" class:highlighted={highlightedCells.includes(i)} on:click={() => handleCellClick(i)}>{cell}</div>\n        {/each}\n    </div>\n    {#if lastWinner}\n        <h2 class=\"notify\">{`Game ended. ${lastWinner} ${lastWinner !== \"DRAW\" ? \"won!\" : \"\"}`}</h2>\n    {:else}\n        <p class=\"notify\">Turn: {playerTurn ? \"PLAYER\" : \"OPPONENT\"}</p>\n    {/if}\n</main>\n\n<style>\n    main {\n        width: 100%;\n        max-width: 360px;\n        height: 100%;\n        margin: 0 auto;\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        box-sizing: content-box;\n    }\n\n    .board {\n        display: grid;\n        height: 100%;\n        max-height: 360px;\n        margin: auto 0;\n        grid-template-rows: repeat(3, 1fr);\n        grid-template-columns: repeat(3, 1fr);\n        box-sizing: content-box;\n        user-select: none;\n        cursor: pointer;\n        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n        -moz-tap-highlight-color: rgba(0, 0, 0, 0);\n    }\n\n    .cell {\n        border: 1px solid #ff3e00;\n        transition: background-color 200ms ease;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        text-transform: uppercase;\n        font-weight: 900;\n        font-size: 32px;\n        font-family: fantasy;\n    }\n\n    .cell:hover {\n        background-color: #f9dbbb;\n    }\n\n    .cell.highlighted {\n        background-color: #f9c3b9;\n    }\n\n    h1 {\n        color: #ff3e00;\n        text-transform: uppercase;\n        font-size: 4em;\n        font-weight: 100;\n        margin: 0;\n    }\n\n    @media screen and (max-width: 480px){\n        h1 {\n            font-size: 3em;\n        }\n    }\n\n    h2 {\n        color: #ff004e;\n        text-transform: uppercase;\n        font-size: 1rem;\n        font-weight: 700;\n        background-color: beige;\n        width: 100%;\n        padding: 0.5em 1em;\n        margin: 0;\n    }\n\n    p {\n        font-size: 1rem;\n        font-family: sans-serif;\n        text-align: center;\n    }\n\n    .notify {\n        position: absolute;\n        right: 0;\n        bottom: 20px;\n        left: 0;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "AAiFI,IAAI,eAAC,CAAC,AACF,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,WAAW,AAC3B,CAAC,AAED,MAAM,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,kBAAkB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAClC,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,UAAU,CAAE,WAAW,CACvB,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,CACf,2BAA2B,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC7C,wBAAwB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,AAC9C,CAAC,AAED,KAAK,eAAC,CAAC,AACH,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,IAAI,CACvC,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,cAAc,CAAE,SAAS,CACzB,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,OAAO,AACxB,CAAC,AAED,oBAAK,MAAM,AAAC,CAAC,AACT,gBAAgB,CAAE,OAAO,AAC7B,CAAC,AAED,KAAK,YAAY,eAAC,CAAC,AACf,gBAAgB,CAAE,OAAO,AAC7B,CAAC,AAED,EAAE,eAAC,CAAC,AACA,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,CAAC,AACb,CAAC,AAED,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,CAAC,AACjC,EAAE,eAAC,CAAC,AACA,SAAS,CAAE,GAAG,AAClB,CAAC,AACL,CAAC,AAED,EAAE,eAAC,CAAC,AACA,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,gBAAgB,CAAE,KAAK,CACvB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,KAAK,CAAC,GAAG,CAClB,MAAM,CAAE,CAAC,AACb,CAAC,AAED,CAAC,eAAC,CAAC,AACC,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,UAAU,CACvB,UAAU,CAAE,MAAM,AACtB,CAAC,AAED,OAAO,eAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,CAAC,AACX,CAAC"
}